%
% DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
%
% This material is based upon work supported by the Under Secretary of Defense for Research and Engineering under Air Force Contract No. FA8702-15-D-0001.
% Any opinions, findings, conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of
% the Under Secretary of Defense for Research and Engineering.
%
% Â© 2023 Massachusetts Institute of Technology.
%
% The software/firmware is provided to you on an As-Is basis
%
% Delivered to the U.S. Government with Unlimited Rights, as defined in DFARS Part 252.227-7013 or 7014 (Feb 2014).
% Notwithstanding any copyright notice, U.S. Government rights in this work are defined by DFARS 252.227-7013 or DFARS 252.227-7014 as detailed above.
% Use of this work other than as specifically authorized by the U.S. Government may violate any copyrights that exist in this work.
%

function bval = b_func(in1,in2,in3,in4,delta,R,amax,turn_loss,lse_param,softabs_param,turn_rate)
%B_FUNC
%    BVAL = B_FUNC(IN1,IN2,IN3,IN4,DELTA,R,AMAX,TURN_LOSS,LSE_PARAM,SOFTABS_PARAM,TURN_RATE)

%    This function was generated by the Symbolic Math Toolbox version 9.0.
%    19-Sep-2022 16:50:42

u21 = in4(1,:);
u22 = in4(2,:);
u1_prev1 = in3(1,:);
u1_prev2 = in3(2,:);
z11 = in1(1,:);
z12 = in1(2,:);
z13 = in1(3,:);
z14 = in1(4,:);
z21 = in2(1,:);
z22 = in2(2,:);
z23 = in2(3,:);
z24 = in2(4,:);
t2 = cos(z14);
t3 = cos(z24);
t4 = sin(z14);
t5 = sin(z24);
t6 = softabs_param.^2;
t7 = u1_prev2.^2;
t8 = z11.*2.0;
t9 = z12.*2.0;
t10 = z21.*2.0;
t11 = z22.*2.0;
t12 = 1.0./lse_param;
t22 = (lse_param.*u1_prev1)./1.0e+1;
t13 = -t10;
t14 = -t11;
t15 = t2.*z13.*2.0;
t16 = t3.*z23.*2.0;
t17 = t4.*z13.*2.0;
t18 = t5.*z23.*2.0;
t21 = t6+t7;
t25 = exp(t22);
t19 = -t16;
t20 = -t18;
t23 = t8+t13;
t24 = t9+t14;
t26 = t25+1.0;
t29 = sqrt(t21);
t27 = delta.*t23;
t28 = delta.*t24;
t30 = log(t26);
t31 = -t29;
t32 = softabs_param+t31;
t33 = t15+t19+t27;
t34 = t17+t20+t28;
t35 = (t32.*turn_loss)./1.0e+2;
t36 = t35+1.0;
bval = delta.*(delta.*((z11-z21).^2+(z12-z22).^2-R.^2)+t2.*t23.*z13+t4.*t24.*z13-t3.*t23.*z23-t5.*t24.*z23)+(t2.*t23+t4.*t24).*(t12.*t30.*t36.*1.0e+1-(t25.*t36.*u1_prev1)./t26+(t7.*t12.*t30.*turn_loss)./(t29.*1.0e+1))+t2.*t33.*z13+t4.*t34.*z13-t3.*t33.*z23-t5.*t34.*z23-(turn_rate.*u21.*u22.*(t3.*t24.*z23-t5.*t23.*z23))./5.0e+3-(turn_rate.*u1_prev1.*u1_prev2.*(t2.*t24.*z13-t4.*t23.*z13))./5.0e+3-t12.*log(exp((lse_param.*u21)./1.0e+1)+1.0).*((turn_loss.*(softabs_param-sqrt(t6+u22.^2)))./1.0e+2+1.0).*(t3.*t23+t5.*t24).*1.0e+1;
